$date
	Fri May  3 15:03:20 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! cout $end
$var wire 8 " d_out [7:0] $end
$var wire 8 # o [7:0] $end
$var reg 32 $ a [31:0] $end
$var reg 1 % cin $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$scope module e1 $end
$var wire 32 ( a [31:0] $end
$var wire 1 ) cin $end
$var wire 1 * clk $end
$var wire 1 ! cout $end
$var wire 8 + o [7:0] $end
$var wire 8 , o1 [7:0] $end
$var wire 8 - o2 [7:0] $end
$var wire 1 . reset $end
$var wire 1 / s $end
$var wire 8 0 x [7:0] $end
$var wire 8 1 y [7:0] $end
$var wire 8 2 z [7:0] $end
$var reg 24 3 b [23:0] $end
$var reg 8 4 d_out [7:0] $end
$scope module d1 $end
$var wire 8 5 a [31:24] $end
$var wire 1 / s $end
$upscope $end
$scope module w1 $end
$var wire 8 6 a [7:0] $end
$var wire 8 7 b [7:0] $end
$var wire 9 8 c [8:0] $end
$var wire 1 ) cin $end
$var wire 1 ! cout $end
$var wire 8 9 o [7:0] $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > s $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope module fa $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope module fa $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 G cout $end
$var wire 1 H s $end
$upscope $end
$upscope $end
$scope begin genblk0001 $end
$scope module fa $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K cin $end
$var wire 1 L cout $end
$var wire 1 M s $end
$upscope $end
$upscope $end
$scope begin genblk00001 $end
$scope module fa $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P cin $end
$var wire 1 Q cout $end
$var wire 1 R s $end
$upscope $end
$upscope $end
$scope begin genblk000001 $end
$scope module fa $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W s $end
$upscope $end
$upscope $end
$scope begin genblk0000001 $end
$scope module fa $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z cin $end
$var wire 1 [ cout $end
$var wire 1 \ s $end
$upscope $end
$upscope $end
$scope begin genblk00000001 $end
$scope module fa $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ cin $end
$var wire 1 ` cout $end
$var wire 1 a s $end
$upscope $end
$upscope $end
$upscope $end
$scope module a1 $end
$var wire 8 b a [7:0] $end
$var wire 8 c b [7:0] $end
$var wire 8 d s [7:0] $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk01 $end
$upscope $end
$scope begin genblk001 $end
$upscope $end
$scope begin genblk0001 $end
$upscope $end
$scope begin genblk00001 $end
$upscope $end
$scope begin genblk000001 $end
$upscope $end
$scope begin genblk0000001 $end
$upscope $end
$scope begin genblk00000001 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx d
bx c
bx b
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
0<
x;
x:
bx 9
bx0 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
x/
0.
bx -
bx ,
bx +
0*
0)
bx (
0'
0&
0%
bx $
bx #
bx "
x!
$end
#15
1&
1*
#20
0!
0a
0`
0_
0\
0[
0Z
0W
0V
0U
0R
0Q
0P
0M
0L
0K
0H
0G
0F
0C
0B
b0 #
b0 +
0A
0>
b0 ,
b0 9
0=
b0 8
b0 -
b0 d
0:
0?
0D
0I
0N
0S
0X
0]
0;
0@
0E
0J
0O
0T
0Y
0^
1/
b0 0
b0 6
b0 b
b0 1
b0 7
b0 c
b10000000 5
b0 2
b10000000000000000000000000000000 $
b10000000000000000000000000000000 (
#30
0&
0*
#40
b10000 #
b10000 +
1R
b10000 ,
b10000 9
1O
b10000 1
b10000 7
b10000 c
b10000000000000000000000000010000 $
b10000000000000000000000000010000 (
#45
b10000 3
b10000 4
b10000 "
1&
1*
#60
0/
b0 #
b0 +
b0 5
b1000000 2
0&
0*
b10000000000000000010000 $
b10000000000000000010000 (
#75
b10000000000000000010000 3
b0 4
b0 "
1&
1*
#80
1M
1K
1G
1F
b10 #
b10 +
1B
b1100 8
0H
1a
b10011000 ,
b10011000 9
b10 -
b10 d
1?
1D
1@
1^
b110 0
b110 6
b110 b
b10010010 1
b10010010 7
b10010010 c
b100000 5
b0 2
b100000000000000000011010010010 $
b100000000000000000011010010010 (
#90
0&
0*
#100
0M
0K
0F
1P
0H
0G
0B
1L
b10000 8
1R
0a
b10000 ,
b10000 9
b1000 -
b1000 d
0?
0D
1I
0@
1J
0O
0^
1/
b1000 0
b1000 6
b1000 b
b1000 1
b1000 7
b1000 c
b10000 #
b10000 +
b10000000 5
b10000000000000000000100000001000 $
b10000000000000000000100000001000 (
#105
b100000001000 3
b10000 4
b10000 "
1&
1*
#120
0R
0P
b100100 #
b100100 +
1H
0L
b0 8
1W
b100100 ,
b100100 9
b0 -
b0 d
1D
0I
0J
1T
b100 0
b100 6
b100 b
b100000 1
b100000 7
b100000 c
0&
0*
b10000000000000000000010000100000 $
b10000000000000000000010000100000 (
#135
b10000100000 3
b100100 4
b100100 "
1&
1*
#150
0&
0*
#160
1\
1Z
0W
1V
1U
1Q
1P
1L
1K
b1000011 #
b1000011 +
1>
1C
0H
1G
b1111000 8
0M
0R
b1000011 ,
b1000011 9
b100 -
b100 d
1;
1@
1E
1J
1O
b111111 1
b111111 7
b111111 c
b10000000000000000000010000111111 $
b10000000000000000000010000111111 (
#165
b10000111111 3
b1000011 4
b1000011 "
1&
1*
#180
0\
0Z
1W
0V
0P
b101000 #
b101000 +
0U
0>
0C
1M
0L
0R
b101000 ,
b101000 9
0Q
b1000 8
0;
0@
0J
0O
b100100 1
b100100 7
b100100 c
0&
0*
b10000000000000000000010000100100 $
b10000000000000000000010000100100 (
#195
b10000100100 3
b101000 4
b101000 "
1&
1*
#200
1R
b110000 #
b110000 +
1P
0M
b110000 ,
b110000 9
1L
b11000 8
1J
b101100 1
b101100 7
b101100 c
b10000000000000000000010000101100 $
b10000000000000000000010000101100 (
#210
0&
0*
#220
1\
1Z
0W
1V
b1000000 #
b1000000 +
1U
0R
b1000000 ,
b1000000 9
1Q
b1111000 8
1O
b111100 1
b111100 7
b111100 c
b10000000000000000000010000111100 $
b10000000000000000000010000111100 (
#225
b10000111100 3
b1000000 4
b1000000 "
1&
1*
#240
0\
0Z
1W
0V
0K
0P
b100111 #
b100111 +
0U
1>
1C
1H
0G
0M
0L
0R
b100111 ,
b100111 9
0Q
b0 8
b0 -
b0 d
1;
1@
0E
0J
0O
b100011 1
b100011 7
b100011 c
0&
0*
b10000000000000000000010000100011 $
b10000000000000000000010000100011 (
